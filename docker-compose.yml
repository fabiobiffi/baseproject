networks:
  baseproject_lan:
    ipam:
      config:
        - subnet: 172.20.0.0/24

services:
  baseproject:
    image: baseproject:latest
    container_name: baseproject
    build:
      dockerfile: ci/dockerfiles/prod/Dockerfile
      context: .
    env_file:
      - .env
    ports:
      - "8000:8000"
      # only for development - enter to the container and run runserver 0.0.0.0:8001
      - "8001:8001"
    networks:
      baseproject_lan:
        ipv4_address: 172.20.0.11
    volumes:
      # mounting volumes <your local path>:<container path>
      - .:/home/django/baseproject/
    depends_on:
      baseproject_postgres:
        condition: service_healthy

  baseproject_postgres:
    container_name: baseproject_postgres
    image: baseproject_postgres:latest
    build:
      dockerfile: ci/dockerfiles/postgres/Dockerfile
      context: .
    ports:
      - "5432:5432"
    networks:
      baseproject_lan:
        ipv4_address: 172.20.0.12
    env_file:
      - .env
    environment:
      - POSTGRES_USER=${POSTGRES_USER:-postgres}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-postgres}
      - POSTGRES_DB=${POSTGRES_DB:-baseproject}
    volumes:
      - baseproject-postgres-data-volume:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-postgres} -d ${POSTGRES_DB:-baseproject} -h localhost"]
      interval: 10s
      timeout: 5s
      retries: 5

  baseproject_nginx:
    container_name: baseproject_nginx
    image: baseproject_nginx:latest
    build:
      dockerfile: ci/dockerfiles/nginx/Dockerfile
      context: .
    environment:
      - NGINX_HOST=localhost
      - NGINX_PORT=80
    ports:
      - "80:80"
    networks:
      baseproject_lan:
        ipv4_address: 172.20.0.14
    # volumes for static files and uploaded files
    volumes:
      - .:/home/django/baseproject
      - ./static:/home/django/baseproject/static
      - ./uploaded:/home/django/baseproject/uploaded
    depends_on:
      - baseproject

# defining volumes
volumes:
  postgres-data-volume:
    driver: local
    driver_opts:
      type: none
      device: ${PWD}/docker/postgres-data
      o: bind
